---
- name: Get blocks for AMB
  become_user: "{{ compose_service_user }}"
  shell: docker-compose run --rm --entrypoint "node scripts/getValidatorStartBlocks.js" bridge_amb_affirmation
  args:
    chdir: "{{ bridge_path }}/oracle"
  register: AMBBLOCKS
  when: (AMB_HOME_START_BLOCK is not defined) or (AMB_FOREIGN_START_BLOCK is not defined)

- name: Write blocks for AMB
  blockinfile:
    path: "{{ bridge_path }}/oracle/.env"
    marker: "## {mark} Calculated by scripts/getValidatorStartBlocks.js"
    block: |
      AMB_HOME_START_BLOCK={{ (AMBBLOCKS.stdout | from_json).homeStartBlock }}
      AMB_FOREIGN_START_BLOCK={{ (AMBBLOCKS.stdout | from_json).foreignStartBlock }}
  when: (AMB_HOME_START_BLOCK is not defined) or (AMB_FOREIGN_START_BLOCK is not defined)

- name: Get validator address for AMB
  become_user: "{{ compose_service_user }}"
  shell: docker-compose run --rm -e ORACLE_VALIDATOR_ADDRESS_PRIVATE_KEY="{{ AMB_ORACLE_VALIDATOR_ADDRESS_PRIVATE_KEY }}" --entrypoint "node scripts/privateKeyToAddress.js" bridge_amb_affirmation
  args:
    chdir: "{{ bridge_path }}/oracle"
  register: AMBVADDRESS

- name: Set AMB_ORACLE_VALIDATOR_ADDRESS variable
  set_fact:
    AMB_ORACLE_VALIDATOR_ADDRESS: "{{ AMBVADDRESS.stdout }}"

- name: Install .key config
  template:
    src: key.j2
    dest: "/root/.key"
    owner: root
    group: root
    mode: 0600
